name: Update Followed Creators

on:
  schedule:
    # ÊØèÊó• 16:00 UTC (Âè∞ÂåóÊôÇÈñì 00:00) Âü∑Ë°å
    - cron: '0 16 * * *'
  workflow_dispatch:
    inputs:
      manual_trigger:
        description: 'ÊâãÂãïËß∏ÁôºË®≠Ë®àÂ∏´Êõ¥Êñ∞'
        required: false
        default: 'manual'

jobs:
  update-creators:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - name: Validate environment secrets
      env:
        ZEABUR_URL: ${{ secrets.ZEABUR_APP_URL }}
        CRON_TOKEN: ${{ secrets.CRON_SECRET_TOKEN }}
      run: |
        if [ -z "${ZEABUR_URL:-}" ]; then
          echo "‚ùå Áº∫Â∞ëÂøÖÈúÄÁöÑ Secrets: ZEABUR_APP_URL"
          echo "Ë´ãÂà∞ Settings ‚Üí Secrets and variables ‚Üí Actions Ë®≠ÂÆö ZEABUR_APP_URL„ÄÇ"
          exit 2
        fi
        if [ -z "${CRON_TOKEN:-}" ]; then
          echo "‚ùå Áº∫Â∞ëÂøÖÈúÄÁöÑ Secrets: CRON_SECRET_TOKEN"
          echo "Ë´ãÂà∞ Settings ‚Üí Secrets and variables ‚Üí Actions Ë®≠ÂÆö CRON_SECRET_TOKEN„ÄÇ"
          exit 2
        fi

    - name: Trigger creator updates on Zeabur
      env:
        ZEABUR_URL: ${{ secrets.ZEABUR_APP_URL }}
        CRON_TOKEN: ${{ secrets.CRON_SECRET_TOKEN }}
      shell: bash
      run: |
        set -u
        BASE_URL="${ZEABUR_URL%/}"
        WAKE_URL="${BASE_URL}/"
        UPDATE_URL="${BASE_URL}/api/cron-update-creators"
        
        echo "üöÄ Starting creator update process..."
        echo "Base URL: ${BASE_URL}"
        echo "Time: $(TZ='Asia/Taipei' date '+%a %b %d %H:%M:%S %Z %Y') (Taipei Time)"

        # Function to make HTTP request with detailed logging
        make_request() {
          local url="$1"
          local method="${2:-GET}"
          local description="$3"
          
          echo "üì° ${description}..."
          echo "  URL: ${url}"
          echo "  Method: ${method}"
          
          set +e
          if [ "$method" = "POST" ]; then
            http_status=$(curl -sS -w "%{http_code}" -o /tmp/response.json \
              --connect-timeout 30 --max-time 600 \
              -X POST \
              -H "Authorization: Bearer ${CRON_TOKEN}" \
              -H "Content-Type: application/json" \
              "${url}")
          else
            http_status=$(curl -sS -w "%{http_code}" -o /tmp/response.json \
              --connect-timeout 30 --max-time 600 \
              "${url}")
          fi
          curl_exit=$?
          set -e
          
          echo "  Exit code: ${curl_exit}"
          echo "  HTTP status: ${http_status}"
          echo "  Response:"
          cat /tmp/response.json 2>/dev/null || echo "    (no response content)"
          echo ""
          
          return $curl_exit
        }

        # Step 1: Wake up the application
        echo "üî• Step 1: Waking up application..."
        if make_request "${WAKE_URL}" "GET" "Wake up application"; then
          if [ "${http_status}" = "200" ] || [ "${http_status}" = "302" ] || [ "${http_status}" = "301" ]; then
            echo "‚úÖ Application is responding"
          else
            echo "‚ö†Ô∏è  Application responded with status ${http_status}, but continuing..."
          fi
        else
          echo "‚ö†Ô∏è  Wake up request failed, but continuing anyway..."
        fi

        # Step 2: Wait for application to fully start
        echo "‚è≥ Step 2: Waiting 30 seconds for application to fully initialize..."
        sleep 30

        # Step 3: Trigger creator updates with retry logic
        echo "üë• Step 3: Triggering creator updates..."
        
        MAX_RETRIES=3
        RETRY_DELAY=60
        
        for attempt in $(seq 1 $MAX_RETRIES); do
          echo "üîÑ Attempt ${attempt}/${MAX_RETRIES}:"
          
          if make_request "${UPDATE_URL}" "POST" "Trigger creator updates"; then
            if [ "${http_status}" = "200" ]; then
              echo "‚úÖ Creator updates triggered successfully!"
              exit 0
            elif [ "${http_status}" = "502" ] || [ "${http_status}" = "503" ] || [ "${http_status}" = "504" ]; then
              echo "‚ö†Ô∏è  Server error (${http_status}) - application might still be starting up..."
              if [ $attempt -lt $MAX_RETRIES ]; then
                echo "üí§ Waiting ${RETRY_DELAY} seconds before retry..."
                sleep $RETRY_DELAY
                continue
              fi
            else
              echo "‚ùå Request failed with status ${http_status}"
              break
            fi
          else
            echo "‚ùå Request failed with curl exit code ${curl_exit}"
            if [ $attempt -lt $MAX_RETRIES ]; then
              echo "üí§ Waiting ${RETRY_DELAY} seconds before retry..."
              sleep $RETRY_DELAY
              continue
            fi
          fi
        done

        echo "‚ùå Creator updates failed after ${MAX_RETRIES} attempts"
        echo "üí° Troubleshooting tips:"
        echo "  - Check if ZEABUR_APP_URL is correct and includes http(s)://"
        echo "  - Verify CRON_SECRET_TOKEN matches your application configuration"
        echo "  - Ensure your Zeabur application is running and not crashed"
        echo "  - Check application logs in Zeabur dashboard"
        exit 1